import dbPromise from "@/modules/mongodb"

export default async function CreateBook(req, res) {
  console.log("Create Book")
  let {
    entryid,
    title,
    nomstatus,
    nommemo,
    author1,
    author2,
    categories,
    bigskyaward,
    isbn,
    nominatedby,
    publisher,
    paddress1,
    paddress2,
    pcity,
    pstate,
    pzip,
    pcountry,
    pphone,
    pemail,
    aphone,
    aemail,
    aaddress1,
    aaddress2,
    acity,
    astate,
    azip,
    acountry,
    createddate,
    qualifiedstatus,
    copyIds,
  } = JSON.parse(req.body)
  const newCopyIds = copyIds.length ? copyIds.split(",") : []
  copyIds = newCopyIds
  console.log(
    "books",
    entryid,
    title,
    nomstatus,
    nommemo,
    author1,
    author2,
    categories,
    bigskyaward,
    isbn,
    nominatedby,
    publisher,
    paddress1,
    paddress2,
    pcity,
    pstate,
    pzip,
    pcountry,
    pphone,
    pemail,
    aphone,
    aemail,
    aaddress1,
    aaddress2,
    acity,
    astate,
    azip,
    acountry,
    createddate,
    qualifiedstatus,
    copyIds
  )
  // const dbConnection = await dbPromise
  // const collection = await dbConnection.db().collection("books")
  // const { insertedId } = await collection.insertOne({
  //   entryid,
  //   title,
  //   nomstatus,
  //   nommemo,
  //   author1,
  //   author2,
  //   categories,
  //   bigskyaward,
  //   isbn,
  //   nominatedby,
  //   publisher,
  //   paddress1,
  //   paddress2,
  //   pcity,
  //   pstate,
  //   pzip,
  //   pcountry,
  //   pphone,
  //   pemail,
  //   aphone,
  //   aemail,
  //   aaddress1,
  //   aaddress2,
  //   acity,
  //   astate,
  //   azip,
  //   acountry,
  //   createddate,
  //   qualifiedstatus,
  //   copyIds,
  // })

  res.status(201).json({
    // _id: insertedId.toString(),
    _id: 1,
    entryid,
    title,
    nomstatus,
    nommemo,
    author1,
    author2,
    categories,
    bigskyaward,
    isbn,
    nominatedby,
    publisher,
    paddress1,
    paddress2,
    pcity,
    pstate,
    pzip,
    pcountry,
    pphone,
    pemail,
    aphone,
    aemail,
    aaddress1,
    aaddress2,
    acity,
    astate,
    azip,
    acountry,
    createddate,
    qualifiedstatus,
    copyIds,
  })
}
